"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.6.
"""

# Core imports
from pathlib import Path
import os
from datetime import timedelta
from dotenv import load_dotenv

# Load variables from .env so secrets and configs aren’t hard-coded
load_dotenv()

# Base directory of the project (two levels up from this file)
BASE_DIR = Path(__file__).resolve().parent.parent


# ---------------------------------------------------------
# Security / Debug
# ---------------------------------------------------------

# Secret key for cryptographic signing.
SECRET_KEY = 'django-insecure-dyuf$m7j0h*(m)bo=xjimh49$02==21%d6s%_12cyp^l=pw&kr'

# Debug mode on for development — must be off in production.
DEBUG = True

# Allow every host during development. 
ALLOWED_HOSTS = ["*"]


# ---------------------------------------------------------
# Django REST Framework / JWT Auth
# ---------------------------------------------------------

# Default REST framework settings for the API
REST_FRAMEWORK = {
    # Use JWTs instead of session-based auth
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    # Require authentication by default
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}

# Configure JWT lifetimes
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=30),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
}


# ---------------------------------------------------------
# Installed Apps
# ---------------------------------------------------------

INSTALLED_APPS = [
    # Django’s built-in apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # pps / third-party apps
    "api",
    "rest_framework",
    "corsheaders",
]


# ---------------------------------------------------------
# Middleware
# ---------------------------------------------------------

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # CORS middleware must run before CommonMiddleware
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# ---------------------------------------------------------
# URL / WSGI
# ---------------------------------------------------------

# Root URL config
ROOT_URLCONF = 'backend.urls'

# Template engine (used if I ever serve HTML)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI entry point for production servers
WSGI_APPLICATION = 'backend.wsgi.application'


# ---------------------------------------------------------
# Database
# ---------------------------------------------------------

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# ---------------------------------------------------------
# Password Validation
# ---------------------------------------------------------

AUTH_PASSWORD_VALIDATORS = [
    # Basic checks to prevent weak passwords
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# ---------------------------------------------------------
# Internationalization
# ---------------------------------------------------------

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# ---------------------------------------------------------
# Static Files
# ---------------------------------------------------------

# URL prefix for serving static files (CSS, JS, images)
STATIC_URL = 'static/'

# Default primary key type for new models
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ---------------------------------------------------------
# CORS (Cross-Origin Resource Sharing)
# ---------------------------------------------------------

# Allow all origins for development 
CORS_ALLOW_ALL_ORIGINS = True

# Allow cookies and auth headers across origins
CORS_ALLOW_CREDENTIALS = True
